clc;
close all;

% % figure;
% hold on;
% grid on;
% f = readmatrix("map.csv","NumHeaderLines", 1);
% x = f(:, 1);
% y = f(:, 2);
% plot(x, y);
% 
% figure;
% hold on; grid on;
% f = readmatrix("py/map_ks100_kr80_umax75_umin20.csv", NumHeaderLines=1);
% x = f(:, 1);
% y = f(:, 2);
% plot(x, y);
% 
% figure;
% hold on; grid on;
% f = readmatrix("py/map_ks100_kr60_umax75_umin20.csv", NumHeaderLines=1);
% x = f(:, 1);
% y = f(:, 2);
% plot(x, y);
% 
% figure;
% hold on; grid on;
% f = readmatrix("py/map_ks100_kr60_umax60_umin20.csv", NumHeaderLines=1);
% x = f(:, 1);
% y = f(:, 2);
% plot(x, y);
% 
% figure;
% hold on; grid on;
% f = readmatrix("py/map_ks80_kr40_umax75_umin20.csv", NumHeaderLines=1);
% x = f(:, 1);
% y = f(:, 2);
% rho = f(:, 5);
% theta = f(:, 7);
% plot(x, y);
% 
% figure;
% plot(theta ./ pi .* 180);

% TARGETS = [0.5, 0.5; -0.5, 0.5; -0.5, -0.5; 0.5, -0.5; 0.5, 0.5];
% TARGETS = [0.5, 0.5; -0.5, 0.5]%; -0.5, -0.5; 0.5, -0.5; 0.5, 0.5];
% TARGETS = [0, 1; 1, 0; 0, -1; -1, 0];
TARGETS = [1, 1; -1, 1; -1, -1; 1, -1; 1, 1];
TARGETS = TARGETS / 2;

% Simulink motor config from lab2
L = 0.0047;
R = 4.8776;
i = 48;
k_e = 0.3953;
k_m = k_e;
m = 0.0156;
r = 11.47/1000;
J = i^2 * m * r^2 / 2;

WHEEL_RADIUS = (7/2) / 100;  %# wheel radius (meters)
BASE =  11.5 / 100; % # space between centers of wheels!!! (meters)

% %# Cycle period
% T = 0.045; 

%# Reg params
KS = 15; % # linear speed
KR = 30; %# angular speed

% Real robot basic model results
f = readmatrix("py/basic_ks80_kr40_umax75_umin20.csv", NumHeaderLines=1);
x = f(:, 1);
y = f(:, 2);
figure (1);
hold on; grid on;
title("Траектория базовой модели");
plot(x, y, LineWidth=2, DisplayName="Traectory");
plot(TARGETS(:, 1), TARGETS(:, 2), 'o', LineWidth=3, DisplayName="Targets", color=[0 0 1]);
plot(0, 0,  'o', LineWidth=3, DisplayName="Start point", Color=[0 1 0]);
xlabel("X, м");
ylabel("Y, м");
legend("show", "Location","best");

% Real robot better model results
f = readmatrix("py/better_ks80_kr40_umax75_umin20.csv", NumHeaderLines=1);
x = f(:, 1);
y = f(:, 2);
figure (2);
hold on; grid on;
title("Траектория улучшенной модели");
plot(x, y, LineWidth=2, DisplayName="Traectory");
plot(TARGETS(:, 1), TARGETS(:, 2), 'o', LineWidth=3, DisplayName="Targets", color=[0 0 1]);
plot(0, 0,  'o', LineWidth=3, DisplayName="Start point", Color=[0 1 0]);
xlabel("X, м");
ylabel("Y, м");
legend("show", "Location","best");

figure;
hold on; grid on;

title("Симулинк нахуй");
ini_x = 0;
ini_y = 0;
for i = 1:size(TARGETS, 1)
    goal_x = TARGETS(i, 1);
    goal_y = TARGETS(i, 2);

    simOut = sim("lab4sim.slx", "ReturnWorkspaceOutputs", "on");
    x_out = simOut.x.Data;
    y_out = simOut.y.Data;
    plot(x_out, y_out, "--" ,LineWidth=2, DisplayName="Traectory", color=[0.5 0.5 0.5]);
    
    ini_x = x_out(end);
    ini_y = y_out(end);
end
plot(x, y, LineWidth=2, DisplayName="Traectory", color=[0 0.82 ]);
plot(TARGETS(:, 1), TARGETS(:, 2), 'o', LineWidth=3, DisplayName="Targets", color=[0 0 1]);
plot(0, 0,  'o', LineWidth=3, DisplayName="Start point", Color=[0 1 0]);








% 
% figHandles = findobj('Type', 'figure'); % Получаем все графические окна
% for i = 1:length(figHandles)
%     figure(figHandles(i)); % Делаем текущей i-ю фигуру
%     legend('show', 'Location','best')
%     grid on;
%     set(gcf, 'Position', [100, 100, 650, 600]); % Устанавливаем размеры
%     % Настройка шрифтов
%     set(gca, 'FontSize', 12, 'FontWeight', 'normal', 'FontName', 'Times New Roman');
%     titleHandle = findobj(gca, 'Type', 'text');
%     if ~isempty(titleHandle)
%         set(titleHandle, 'FontSize', 12);
%     end
% end

